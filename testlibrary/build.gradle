if (isRunAlone.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion rootProject.ext.app.compileSdkVersion


    defaultConfig {
        minSdkVersion rootProject.ext.app.minSdkVersion
        targetSdkVersion rootProject.ext.app.targetSdkVersion
        versionCode rootProject.ext.app.versionCode
        versionName rootProject.ext.app.versionName
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            if (isRunAlone.toBoolean()) {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
                compileOptions {
                    sourceCompatibility 1.8
                    targetCompatibility 1.8
                }
            } else {
                manifest.srcFile 'src/main/release/AndroidManifest.xml'
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api project(path: ':Baselibrary')
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    annotationProcessor 'com.alibaba:arouter-compiler:1.2.2'
    //banner
    implementation 'com.youth.banner:banner:1.4.10'  //最新版本
}
